<?xml version="1.0" encoding="utf-8"?> 
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
 <title type="text">Mr.λ @ Here: Mr.λ @ Here</title>
 <link rel="self" href="http://shenxs.github.io/feeds/all.atom.xml" />
 <link href="http://shenxs.github.io/index.html" />
 <id>urn:http-shenxs-github-io:-index-html</id>
 <updated>2016-07-17T08:53:10Z</updated>
 <entry>
  <title type="text">system reinstall</title>
  <link rel="alternate" href="http://shenxs.github.io/blog/2016/07/17/system-reinstall/?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-shenxs-github-io:-blog-2016-07-17-system-reinstall</id>
  <published>2016-07-17T08:53:10Z</published>
  <updated>2016-07-17T08:53:10Z</updated>
  <author>
   <name>Mr.λ</name></author>
  <content type="html">&lt;html&gt;
&lt;h2 id="基本情况和要求介绍"&gt;基本情况和要求介绍&lt;/h2&gt;

&lt;ul&gt;
 &lt;li&gt;双硬盘,一块128G的ssd,一块500G的机械硬盘&lt;/li&gt;
 &lt;li&gt;8G内存&lt;/li&gt;
 &lt;li&gt;N卡加intel集显&lt;/li&gt;
 &lt;li&gt;最后要求双系统,Ubuntu14.04LTS + Windows10&lt;/li&gt;&lt;/ul&gt;
&lt;!-- more--&gt;

&lt;h2 id="安装准备"&gt;安装准备&lt;/h2&gt;

&lt;ul&gt;
 &lt;li&gt;两个u盘,刻好windows和ubuntu的镜像文件&lt;/li&gt;
 &lt;li&gt;备份好你的重要资料&lt;/li&gt;
 &lt;li&gt;将bios设置为u盘启动&lt;/li&gt;
 &lt;li&gt;bios中SATA Configuration设置为AHCI&lt;/li&gt;&lt;/ul&gt;

&lt;h2 id="安装windows"&gt;安装windows&lt;/h2&gt;

&lt;p&gt;由于之前安装过windows10并且是正版激活的所以并不需要密匙.  安装的时候把所有的盘全部格掉(为了ssd的4k对齐),  我在ssd上分了40G给windows,作为c盘.  机械盘划了100G作为软件安装盘(windows10从软件商店上安装的软件可以从系统设置为安装到其他的盘)  机械盘再划100G作为仓库盘(这个盘是windows和ubuntu共用的用来储存资料,在两个系统之间共享文件)  以上所有的盘都采用NTFS格式&lt;/p&gt;

&lt;h2 id="安装ubuntu"&gt;安装Ubuntu&lt;/h2&gt;

&lt;p&gt;将SSD剩下所有的容量都分给ubuntu.安装的时候注意选择自定义  分区如下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-   1G /boot
-   40G /
-   剩下的划给/home
-   还在机械上划了8G用作swap(似乎没什么必要)
以上除了swap.所有的盘符采用EXT4格式,将home单独挂在可以方便将来重装&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="配置windows"&gt;配置windows&lt;/h2&gt;

&lt;ul&gt;
 &lt;li&gt;安装驱动,基本win10自己就可以帮你做好了&lt;/li&gt;
 &lt;li&gt;从电源管理中,将快速启动关闭,已经将系统装在SSD上面所以开机速度基本没有太大差别(这么做是为了让ubuntu能够挂载windows的分区)&lt;/li&gt;
 &lt;li&gt;将windows的安装设置设置到机械硬盘&lt;/li&gt;
 &lt;li&gt;将默认的下载,文档,音乐,..都设置为另一个机械盘分区里面的相应文件夹&lt;/li&gt;&lt;/ul&gt;

&lt;h2 id="配置ubuntu"&gt;配置ubuntu&lt;/h2&gt;

&lt;ul&gt;
 &lt;li&gt;
  &lt;h2 id="n卡驱动的安装"&gt;N卡驱动的安装&lt;/h2&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;&amp;mdash; 1,添加Graphic Drivers PPA&lt;/p&gt;

&lt;div class="brush: shell"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo add-apt-repository ppa:graphics-drivers/ppa
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&amp;mdash; 2,更新或安装最新Nvidia驱动程序&lt;/p&gt;

&lt;div class="brush: shell"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get install nvidia-355
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;这已经是我知道的最简单的方法了,linux的驱动问题一直都挺让我头痛的.这样安装完成之后在我的机器上 会导致开机默认亮度最大,fn+热键无法调节亮度&lt;/p&gt;

&lt;ul&gt;
 &lt;li&gt;
  &lt;h3 id="优化ssd"&gt;优化SSD&lt;/h3&gt;
  &lt;p&gt;可以参考以下&lt;a href="sites.google.com/site/easylinuxtipsproject/ssd#TOC-Avoid-quick-wear:-reduce-write-actions"&gt;文章&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;h3 id="自动挂载"&gt;自动挂载&lt;/h3&gt;
  &lt;p&gt;使用ubuntu自带的磁盘管理工具将仓库盘设置为开机自动挂在,挂载点记得选择挂在到/media/你的用户名/盘名 我的挂载点是/media/richard/EECC1B6ACC1B2C79/&lt;/p&gt;&lt;/li&gt;
 &lt;li&gt;
  &lt;h3 id="修改默认路径"&gt;修改默认路径&lt;/h3&gt;
  &lt;p&gt;修改~/.config/user-dirs.dirs 文件以下是我的配置文件&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;

&lt;div class="brush: txt"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span&gt;&lt;/span&gt;# This file is written by xdg-user-dirs-update
# If you want to change or add directories, just edit the line you&amp;#39;re
# interested in. All local changes will be retained on the next run
# Format is XDG_xxx_DIR="$HOME/yyy", where yyy is a shell-escaped
# homedir-relative path, or XDG_xxx_DIR="/yyy", where /yyy is an
# absolute path. No other format is supported.
#
XDG_DESKTOP_DIR="$HOME/桌面"
XDG_DOWNLOAD_DIR="/media/richard/EECC1B6ACC1B2C79/下载"
XDG_TEMPLATES_DIR="$HOME/模板"
XDG_PUBLICSHARE_DIR="$HOME/公共的"
XDG_DOCUMENTS_DIR="/media/richard/EECC1B6ACC1B2C79/文档"
XDG_MUSIC_DIR="/media/richard/EECC1B6ACC1B2C79/音乐"
XDG_PICTURES_DIR="/media/richard/EECC1B6ACC1B2C79/图片"
XDG_VIDEOS_DIR="/media/richard/EECC1B6ACC1B2C79/视频"
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;你可以参考并修改为自己相应的机械硬盘的位置(即我们之前分出来用作仓库盘的地方) 这样ubuntu的默认的下载,文档,音乐等等的位置就和windows在同一个物理位置了&lt;/p&gt;

&lt;h2 id="结束语"&gt;结束语&lt;/h2&gt;

&lt;p&gt;接下来就是各种软件的安装了(挺费时间的),把备份的资料拷到电脑里. 原本我是把ubuntu安装在机械盘上面,ubuntu随着我的升级折腾已经是千疮百孔.开机每次都要等两分半左右 而几乎千年不开机的windows占用着ssd,所以才有了这次的重装,目的就是稳定高效.可以让两个系统共享一个盘符 作为仓库盘,免去了重启切换系统的麻烦.有些软件在windows和ubuntu平台下的配置文件是通用的,可以把他们的工作路径也设置为同一个位置 这样就有了不同系统下一致同步的体验了.安装完成后ubuntu开机几乎10s之内,各种软件 丝滑流畅&lt;/p&gt;&lt;/html&gt;</content></entry>
 <entry>
  <title type="text">Flatland</title>
  <link rel="alternate" href="http://shenxs.github.io/blog/2016/07/17/flatland/?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-shenxs-github-io:-blog-2016-07-17-flatland</id>
  <published>2016-07-17T08:32:03Z</published>
  <updated>2016-07-17T08:32:03Z</updated>
  <author>
   <name>Mr.λ</name></author>
  <content type="html">&lt;html&gt;
&lt;div class="figure"&gt;&lt;img src="/img/FlatLand.jpg" alt="a" /&gt;
 &lt;p class="caption"&gt;a&lt;/p&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;有关平面国&lt;/em&gt;&lt;/p&gt;
&lt;!-- more--&gt;

&lt;h3 id="为什么去看了这书"&gt;为什么去看了这书&lt;/h3&gt;

&lt;ul&gt;
 &lt;li&gt;《the little schenmer》在最后推荐了这本书&lt;/li&gt;
 &lt;li&gt;正好图书馆有的借,就看了看&lt;/li&gt;&lt;/ul&gt;

&lt;h3 id="有关内容"&gt;有关内容&lt;/h3&gt;

&lt;p&gt;其实可以顾名思义,这书讲述了一个发生在平面里面的国家的故事 介绍二维世界的生物,法律,气候,地理,历史&amp;hellip; 作者的想象力确实是强大&lt;/p&gt;

&lt;p&gt;书大概可以分为两个部分 - 详细介绍二维世界的部分 - 主角正方形了解不同维度的过程&lt;/p&gt;

&lt;p&gt;第一个部分,说实话有些枯燥,不过作者的想象还是挺好玩的,这里面也在平面国里面映射许多我们这个世界的现实问题&lt;/p&gt;

&lt;p&gt;本以为第二部分会用大量的篇幅去描绘,但是在书中的比重没有第一部分大.&lt;/p&gt;

&lt;p&gt;这是一部映射现实一些问题的科幻小说.内容适量(一天就看完了)也值得一看。&lt;/p&gt;&lt;/html&gt;</content></entry>
 <entry>
  <title type="text">vim italic</title>
  <link rel="alternate" href="http://shenxs.github.io/blog/2016/07/17/vim-italic/?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-shenxs-github-io:-blog-2016-07-17-vim-italic</id>
  <published>2016-07-16T16:13:17Z</published>
  <updated>2016-07-16T16:13:17Z</updated>
  <author>
   <name>Mr.λ</name></author>
  <content type="html">&lt;html&gt;
&lt;div class="figure"&gt;&lt;img src="/img/vim-italic.png" alt="vim-italic" /&gt;
 &lt;p class="caption"&gt;vim-italic&lt;/p&gt;&lt;/div&gt;
&lt;!-- more--&gt;

&lt;p&gt;首先,你需要确保你的终端支持斜体显示,在终端输入&lt;/p&gt;

&lt;div class="brush: bash"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;"\e[3m foo \e[23m"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;如果你看到了斜体的*foo*就可以了,不然的话就意味着你需要换终端了(我用的是gnome terminal)&lt;/p&gt;

&lt;p&gt;然后你需要帮助vim知道你使用的终端类型,在你的&lt;code&gt;~/.bashrc&lt;/code&gt;中加入&lt;/p&gt;

&lt;div class="brush: bash"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;TERM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"xterm-256color"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;现在看看是否可以正常显示斜体了,打开一个新文件&lt;code&gt;vim foo.html&lt;/code&gt;,输入以下内容 &lt;code&gt;&amp;lt;i&amp;gt;foo&amp;lt;/i&amp;gt;&lt;/code&gt; 你看到了斜体的&lt;code&gt;foo&lt;/code&gt;了吗?如果没有那么继续(我也没有),在你得&lt;code&gt;~/.vimrc&lt;/code&gt;中加入下面内容&lt;/p&gt;

&lt;div class="brush: bash"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;t_ZH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;^&lt;span class="o"&gt;[[&lt;/span&gt;3m
&lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;t_ZR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;^&lt;span class="o"&gt;[[&lt;/span&gt;23m
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt; &lt;code&gt;^[&lt;/code&gt;不是两个分开的字符,这是一个整体代表&lt;code&gt;ESC&lt;/code&gt;键,&lt;code&gt;CTRL+V+ESC&lt;/code&gt;就可以打出来了(在vim中)&lt;/p&gt;

&lt;p&gt;ok 你现在再打开&lt;code&gt;foo.html&lt;/code&gt;就应该可以看到斜体的*foo*了&lt;/p&gt;

&lt;p&gt;如果你希望将你的注释都设置为斜体,在&lt;code&gt;~/.vimrc&lt;/code&gt;中加入以下内容 要在颜色设置的后面&lt;/p&gt;

&lt;div class="brush: bash"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span&gt;&lt;/span&gt;highlight Comment &lt;span class="nv"&gt;cterm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;italic
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;ok,so nice :)&lt;/p&gt;&lt;/html&gt;</content></entry>
 <entry>
  <title type="text">test about url</title>
  <link rel="alternate" href="http://shenxs.github.io/blog/2016/07/17/test-about-url/?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-shenxs-github-io:-blog-2016-07-17-test-about-url</id>
  <published>2016-07-16T16:01:10Z</published>
  <updated>2016-07-16T16:01:10Z</updated>
  <author>
   <name>Mr.λ</name></author>
  <content type="html">&lt;html&gt;
&lt;p&gt;Github page 似乎不支持在uri中存在中文,之前可以用的,为什么又不可以了&amp;hellip;&lt;/p&gt;
&lt;!-- more--&gt;&lt;/html&gt;</content></entry>
 <entry>
  <title type="text">测试中文字符</title>
  <link rel="alternate" href="http://shenxs.github.io/blog/2016/07/16/测试中文字符/?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-shenxs-github-io:-blog-2016-07-16-测试中文字符</id>
  <published>2016-07-16T15:56:02Z</published>
  <updated>2016-07-16T15:56:02Z</updated>
  <author>
   <name>Mr.λ</name></author>
  <content type="html">&lt;html&gt;
&lt;p&gt;&lt;em&gt;Replace this with your post text. Add one or more comma-separated Tags above. The special tag &lt;code&gt;DRAFT&lt;/code&gt; will prevent the post from being published.&lt;/em&gt;&lt;/p&gt;
&lt;!-- more--&gt;&lt;/html&gt;</content></entry>
 <entry>
  <title type="text">A 2012 blog post</title>
  <link rel="alternate" href="http://shenxs.github.io/blog/2012/01/01/a-2012-blog-post/?utm_source=all&amp;utm_medium=Atom" />
  <id>urn:http-shenxs-github-io:-blog-2012-01-01-a-2012-blog-post</id>
  <published>2011-12-31T16:00:00Z</published>
  <updated>2011-12-31T16:00:00Z</updated>
  <author>
   <name>Mr.λ</name></author>
  <content type="html">&lt;html&gt;
&lt;p&gt;Here is an example blog post.&lt;/p&gt;

&lt;p&gt;Everything after this paragraph &amp;ldquo;after the break&amp;rdquo;. On index pages and Atom feeds, it will become &amp;ldquo;Continue reading&amp;hellip;&amp;rdquo;, if you configure them to include only the summary &amp;ldquo;blurb&amp;rdquo; before the break.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;some code&lt;/code&gt;&lt;/pre&gt;
&lt;!-- more--&gt;

&lt;p&gt;Here&amp;rsquo;s some &lt;a href="http://bullshitipsum.com/?paragraphs=2"&gt;Bullshit Ipsum&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Addelivery integrate ecologies e-markets standards-compliant utilize technologies aggregate addelivery viral&amp;mdash;communities dynamic functionalities. Mindshare engineer viral A-list: cross-platform remix engage social cross-media social innovate distributed matrix experiences monetize utilize innovative. Action-items transition recontextualize sexy Cluetrain envisioneer, &amp;ldquo;vortals communities evolve technologies sexy methodologies.&amp;rdquo; Enhance grow compelling iterate architect matrix plug-and-play reinvent scale, distributed incentivize, extend.&lt;/p&gt;

&lt;p&gt;Revolutionary proactive. Target; envisioneer e-services sticky robust morph users methodologies, markets content supply-chains, granular monetize reinvent harness initiatives. Plug-and-play productize vortals integrate compelling aggregate, user-contributed, integrate web-enabled grow extend mindshare, repurpose world-class harness next-generation eyeballs solutions blogospheres extend. Rss-capable methodologies, &amp;ldquo;vortals vertical,&amp;rdquo; synthesize real-time user-contributed impactful utilize architect deploy ROI redefine design proactive strategic user-centric.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s a footnote&lt;sup&gt;&lt;a href="#2012-01-01-a-2012-blog-post-footnote-1-definition" name="2012-01-01-a-2012-blog-post-footnote-1-return"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h2 id="code-blocks"&gt;Code blocks&lt;/h2&gt;

&lt;p&gt;Frog optionally uses &lt;a href="http://pygments.org/"&gt;Pygments&lt;/a&gt; if it&amp;rsquo;s installed to do syntax highlighting. In your markdown using backtick code blocks you can specify a language:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;```language
some racket code
```&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That name is given to Pygments as the lexer to use.&lt;/p&gt;

&lt;p&gt;For example this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;```js
/**
 * Some JavaScript
 */
function foo()
{
    if (counter &amp;lt;= 10)
        return;
    // it works!
```&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yields this:&lt;/p&gt;

&lt;div class="brush: js"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * Some JavaScript&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// it works!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;And this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;```racket
#lang racket
;; Finds Racket sources in all subdirs
(for ([path (in-directory)])
  (when (regexp-match? #rx"[.]rkt$" path)
    (printf "source file: ~a\n" path)))
(symbol-&amp;gt;string 'foo)
```&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yields this:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;#lang &lt;/span&gt;&lt;span class="nn"&gt;racket&lt;/span&gt;
&lt;span class="c1"&gt;;; Finds Racket sources in all subdirs&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/for.html#(form._((lib._racket/private/base..rkt)._for))" style="color: inherit"&gt;for&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/sequences.html#(def._((lib._racket/private/base..rkt)._in-directory))" style="color: inherit"&gt;in-directory&lt;/a&gt;&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/when_unless.html#(form._((lib._racket/private/letstx-scheme..rkt)._when))" style="color: inherit"&gt;when&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/regexp.html#(def._((quote._~23~25kernel)._regexp-match~3f))" style="color: inherit"&gt;regexp-match?&lt;/a&gt;&lt;/span&gt; &lt;span class="sr"&gt;#rx"[.]rkt$"&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/Writing.html#(def._((quote._~23~25kernel)._printf))" style="color: inherit"&gt;printf&lt;/a&gt;&lt;/span&gt; &lt;span class="s2"&gt;"source file: &lt;a href="http://docs.racket-lang.org/reference/strings.html#(def._((lib._racket/format..rkt)._~7ea))" style="color: inherit"&gt;~a&lt;/a&gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/symbols.html#(def._((quote._~23~25kernel)._symbol-~3estring))" style="color: inherit"&gt;symbol-&amp;gt;string&lt;/a&gt;&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="ss"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Notice that, for Racket, symbols with unambiguous documentation (provided by one library, or provided by several where one is &lt;code&gt;racket&lt;/code&gt; or &lt;code&gt;racket/base&lt;/code&gt;) are links to that documentation.&lt;/p&gt;

&lt;p&gt;This also works outside fenced code blocks, for symbols in backticks immediately followed by &lt;code&gt;[racket]&lt;/code&gt;. Example: &lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/Writing.html#(def._((quote._~23~25kernel)._printf))" style="color: inherit"&gt;printf&lt;/a&gt;&lt;/code&gt;. This isn&amp;rsquo;t official Markdown; it&amp;rsquo;s simply a pun on link syntax and fenced code block languages. This is similar to using &lt;code&gt;@racket[printf]&lt;/code&gt; in Scribble.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;a href="http://docs.racket-lang.org/reference/symbols.html#(def._((quote._~23~25kernel)._symbol-~3estring))" style="color: inherit"&gt;symbol-&amp;gt;string&lt;/a&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here is a lambda: λ.&lt;/p&gt;

&lt;p&gt;Here is a lambda in code backticks: &lt;code&gt;λ&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And here in indented code block:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(λ () #t)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And here in fenced code block, no lang specified:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(λ () #t)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And here in fenced code block, lang = &lt;code&gt;racket&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/lambda.html#(form._((lib._racket/private/base..rkt)._~ce~bb))" style="color: inherit"&gt;λ&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="no"&gt;#t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;And here in fenced code block, lang = &lt;code&gt;scheme&lt;/code&gt;:&lt;/p&gt;

&lt;div class="brush: scheme"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;λ&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="no"&gt;#t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Here&amp;rsquo;s a simple &lt;code&gt;for&lt;/code&gt; macro, written in &lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html"&gt;Racket&lt;/a&gt;:&lt;/p&gt;

&lt;div class="brush: racket"&gt;
 &lt;table class="sourcetable"&gt;
  &lt;tbody&gt;
   &lt;tr&gt;
    &lt;td class="linenos"&gt;
     &lt;div class="linenodiv"&gt;
      &lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
    &lt;td class="code"&gt;
     &lt;div class="source"&gt;
      &lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/stx-patterns.html#(form._((lib._racket/private/misc..rkt)._define-syntax-rule))" style="color: inherit"&gt;define-syntax-rule&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/for.html#(form._((lib._racket/private/base..rkt)._for))" style="color: inherit"&gt;for&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;e1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;e2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;&lt;a href="http://docs.racket-lang.org/reference/pairs.html#(def._((lib._racket/private/map..rkt)._for-each))" style="color: inherit"&gt;for-each&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;&lt;a href="http://docs.racket-lang.org/reference/lambda.html#(form._((lib._racket/private/base..rkt)._~ce~bb))" style="color: inherit"&gt;λ&lt;/a&gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;e2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;e1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;The end.&lt;/p&gt;

&lt;div class="footnotes"&gt;
 &lt;ol&gt;
  &lt;li id="2012-01-01-a-2012-blog-post-footnote-1-definition" class="footnote-definition"&gt;
   &lt;p&gt;Footnote definition.&amp;nbsp;&lt;a href="#2012-01-01-a-2012-blog-post-footnote-1-return"&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;&lt;/html&gt;</content></entry></feed>